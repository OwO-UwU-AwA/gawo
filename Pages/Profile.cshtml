@page
@using Microsoft.AspNetCore.Authorization
@model GaWo.Controllers.ProfileModel
@{
    ViewData["Title"] = "GaWo Profil";
    Model.UserStruct = Model.FillUser().Result;
}

<script>
    function TogglePassword(id)
    {
        let passwordInput;
        let revealer;
        if (id === "button1")
        {
            passwordInput = document.getElementById("currentPassword");
            revealer = document.getElementById("revealer1");
        }
        else if (id === "button2")
        {
            passwordInput = document.getElementById("newPassword");
            revealer = document.getElementById("revealer2");
        }
        else if (id === "button3")
        {
            passwordInput = document.getElementById("newPasswordConf");
            revealer = document.getElementById("revealer3");
        }
        if (passwordInput.getAttribute("type") === "text")
        {
            revealer.classList.remove("fa-eye");
            revealer.classList.add("fa-eye-slash");
            passwordInput.setAttribute("type", "password");
        }
        else
        {
            revealer.classList.remove("fa-eye-slash");
            revealer.classList.add("fa-eye");
            passwordInput.setAttribute("type", "text");
        }
    }
</script>

<div class="container-fluid">
    <div class="row row-cols-1 justify-content-md-start">
        <div class="col w-100">

            <div class="row mt-3">
                <div class="col d-flex flex-row justify-content-between mt-3">
                    <button class="menu-button btn btn-outline-primary me-3" data-bs-toggle="offcanvas" data-bs-target="#sidebar">
                        <i class="fad fa-bars"></i>
                    </button>

                    <h2 class="fw-bold">@Model.UserStruct.FirstName @Model.UserStruct.LastName</h2>

                    @if (Model.AuthorizationService.AuthorizeAsync(User, "AdminOnly").Result.Succeeded)
                    {
                        <button class="menu-button btn btn-outline-primary me-3" data-bs-toggle="offcanvas"
                                data-bs-target="#adminbar">
                            <i class="fad fa-bars"></i>
                        </button>
                    }
                    else
                    {
                        <button class="menu-button btn btn-outline-primary me-3 invisible">
                            <i class="fad fa-bars"></i>
                        </button>
                    }
                </div>
            </div>
            <hr class="border border-primary opacity-50">
        </div>
        <div class="col mb-1">
            Klasse: @Model.UserStruct.Class
        </div>
        <div class="col mb-1">
            <span>
                E-Mail-Adresse: @Model.UserStruct.Email
                @{
                    var query = await Model.Db.Query($"RETURN COUNT(SELECT COUNT() FROM VerificationLinks WHERE user = {Model.UserStruct.Id!} AND type = 'email');");

                    if (query.GetValue<int>(0) > 0)
                    {
                        <span class="badge border border-1 text-danger-emphasis">
                            E-Mail-Adresse nicht verifiziert
                            <i
                                class="text-danger-emphasis fad fa-triangle-exclamation">
                            </i>
                        </span>
                    }
                    else
                    {
                        <span class="badge border border-1 text-success-emphasis">
                            E-Mail-Adresse verifiziert
                            <i
                                class="text-success-emphasis fad fa-circle-check">
                            </i>
                        </span>
                    }
                }
            </span><br>
        </div>
        <div class="col">
            Rolle:
            @{
                if ((Model.UserStruct.Permissions & (1 << 0)) != 0)
                {
                    @: Administrator
                }
                else if ((Model.UserStruct.Permissions & (1 << 1)) != 0)
                {
                    @: Lehrer
                }
                else if ((Model.UserStruct.Permissions & (1 << 2)) != 0)
                {
                    @: Gast
                }
                else
                {
                    @: Schüler
                }
            }
            <br>

            @if (Model.UserStruct.Absence != 0)
            {
                string[] days = ["Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag"];
                string[] absent = ["", "", "", "", ""];

                @: Abgemeldet für :

                // TODO: Clean Up This Mess
                if ((Model.UserStruct.Absence & (1 << 0)) != 0)
                {
                    absent[0] = days[0];
                }

                if ((Model.UserStruct.Absence & (1 << 1)) != 0)
                {
                    absent[1] = days[1];
                }

                if ((Model.UserStruct.Absence & (1 << 2)) != 0)
                {
                    absent[2] = days[2];
                }

                if ((Model.UserStruct.Absence & (1 << 3)) != 0)
                {
                    absent[3] = days[3];
                }

                if ((Model.UserStruct.Absence & (1 << 4)) != 0)
                {
                    absent[4] = days[4];
                }

                // Remove All Days Not Absent
                absent = absent.Where(x => !string.IsNullOrEmpty(x)).ToArray();

                // For Every Day Absent: Add A Comma After It And Print It Except For The Last Day Which Does Not Have A Comma Following
                for (var i = 0; i < absent.Length; i++)
                {
                    if (i != absent.Length - 1)
                    {
                        absent[i] += ", ";
                    }

                    @absent[i]
                }
            }
        </div>
    </div>
</div>

@if (HttpContext.Request.Query.ContainsKey("e") == true || HttpContext.Request.Query.ContainsKey("p") == true)
{
    <svg xmlns="http://www.w3.org/2000/svg" class="d-none">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
        </symbol>
    </svg>
    <div class="alert alert-success alert-dismissible fade show active d-flex align-items-center mt-3" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger">
            <use xlink:href="#exclamation-triangle-fill"/>
        </svg>
        <div>
            Eine E-Mail mit einem Bestätigungslink wurde an @Model.UserStruct.Email gesendet.
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-5">
    <div class="row mb-3">
        <div class="col d-flex flex-column justify-content-between">
            <form asp-page-handler="ChangeEmail" method="post" id="changeEmail">
                <input asp-for="NewEmail" type="text" class="form-control" id="newemail" placeholder="Neue E-Email-Adresse">
                <span asp-validation-for="NewEmail" class="text-danger-emphasis small"></span>
                <button type="submit" class="btn btn-success w-100 mt-3">
                    Email ändern <i class="fad fa-save"></i>
                </button>
            </form>
        </div>
        <div class="col">
            <form asp-page-handler="ChangePassword" method="post" class="col">
                <div class="input-group">
                    <input asp-for="CurrentPassword" type="password" class="form-control" id="currentPassword"
                           placeholder="Derzeitiges Passwort">
                    <button tabindex="-1" type="button" class="btn btn-outline-secondary" onclick="TogglePassword('button1')">
                        <i
                            id="revealer1" class="fad fa-eye-slash" aria-hidden="true">
                        </i>
                    </button>
                </div>
                <span asp-validation-for="CurrentPassword" class="text-danger-emphasis small text-nowrap"></span>
                <div class="input-group mt-3">
                    <input asp-for="NewPassword" type="password" class="form-control" id="newPassword"
                           placeholder="Neues Passwort">
                    <button tabindex="-1" type="button" class="btn btn-outline-secondary" onclick="TogglePassword('button2')">
                        <i
                            id="revealer2" class="fad fa-eye-slash" aria-hidden="true">
                        </i>
                    </button>
                </div>
                <span asp-validation-for="NewPassword" class="text-danger-emphasis small text-nowrap"></span>
                <div class="input-group mt-3">
                    <input asp-for="NewPasswordConf" type="password" class="form-control" id="newPasswordConf"
                           placeholder="Passwort bestätigen">
                    <button tabindex="-1" type="button" class="btn btn-outline-secondary" onclick="TogglePassword('button3')">
                        <i
                            id="revealer3" class="fad fa-eye-slash" aria-hidden="true">
                        </i>
                    </button>
                </div>
                <span asp-validation-for="NewPasswordConf" class="text-danger-emphasis small text-nowrap"></span>
                <button type="submit" class="btn btn-success w-100 mt-3">
                    Passwort ändern <i class="fad fa-save"></i>
                </button>
            </form>
        </div>
        <div class="col">
            <form asp-page-handler="ChangeAbsence" method="post" class="container">
                <div class="d-flex flex-wrap">
                    <div style="flex: 50%;">
                        <input value="1" type="checkbox" class="form-check-input" id="monday" name="monday">
                        <label asp-for="Monday" for="monday">Montag</label>
                    </div>

                    <div style="flex: 50%;">
                        <input value="1" type="checkbox" class="form-check-input" id="tuesday" name="tuesday">
                        <label asp-for="Tuesday" for="tuesday">Dienstag</label>
                    </div>

                    <div style="flex: 50%;">
                        <input value="1" type="checkbox" class="form-check-input" id="wednesday" name="wednesday">
                        <label asp-for="Wednesday" for="wednesday">Mittwoch</label>
                    </div>

                    <div style="flex: 50%;">
                        <input value="1" type="checkbox" class="form-check-input" id="thursday" name="thursday">
                        <label asp-for="Thursday" for="thursday">Donnerstag</label>
                    </div>

                    <div style="flex: 50%;">
                        <input value="1" type="checkbox" class="form-check-input" id="friday" name="friday">
                        <label asp-for="Friday" for="friday">Freitag</label>
                    </div>
                </div>
                <button type="submit" class="btn btn-success w-100 mt-5">
                    Abwesenheit speichern <i class="fad fa-save"></i>
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial"/>
}